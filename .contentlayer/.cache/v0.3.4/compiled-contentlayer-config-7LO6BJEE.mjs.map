{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { Pluggable } from \"unified\";\n\nimport {ComputedFields, defineDocumentType, makeSource,} from \"contentlayer/source-files\"; // eslint-disable-line\n\nimport rehypePrism from \"rehype-prism-plus\";\nimport rehypeSlug from \"rehype-slug\";\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\n\nimport remarkPlantUML from \"@akebifiky/remark-simple-plantuml\";\nimport remarkToc from \"remark-toc\";\n\nconst getSlug = (doc: any) => doc._raw.sourceFileName.replace(/\\.mdx$/, \"\"); // eslint-disable-line\n\nconst challengeComputedFields: ComputedFields = {\n\tslug: {\n\t\ttype: \"string\",\n\t\tresolve: (doc) => getSlug(doc),\n\t},\n};\n\nexport const Challenge = defineDocumentType(() => ({\n\tname: \"Challenge\",\n\tfilePathPattern: `challenges/**/*.mdx`,\n\tcontentType: \"mdx\",\n\tfields: {\n\t\ttitle: {type: \"string\", required: true},\n\t\tsummary: {type: \"string\", required: true},\n\t\tdifficulty: {\n\t\t\ttype: \"enum\", // Enforce strict typing with enum\n\t\t\toptions: [\"Beginner\", \"Intermediate\", \"Advanced\"], // Define allowed values\n\t\t\trequired: true,\n\t\t},\n\t\tcategory: {type: \"string\", required: true},\n\t\tskills: {type: \"list\", required: true, of: { type: \"string\" }},\n\t\testimatedTime: {type: \"string\", required: true},\n\t},\n\tcomputedFields: challengeComputedFields,\n}));\n\nexport default makeSource({\n\tcontentDirPath: \"content\",\n\tdocumentTypes: [Challenge],\n\tmdx: {\n\t\tremarkPlugins: [\n\t\t\tremarkPlantUML as Pluggable,\n\t\t\t[remarkToc, { heading: \"Table of Contents\", maxDepth: 4 }],\n\t\t],\n\t\trehypePlugins: [\n\t\t\trehypePrism as Pluggable,\n\t\t\trehypeSlug,\n\t\t\t[\n\t\t\t\trehypeAutolinkHeadings,\n\t\t\t\t{\n\t\t\t\t\tbehavior: \"wrap\", // Wrap the heading text in an anchor link\n\t\t\t\t},\n\t\t\t],\n\t\t],\n\t},\n});\n"],
  "mappings": ";AAEA,SAAwB,oBAAoB,kBAAkB;AAE9D,OAAO,iBAAiB;AACxB,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AAEnC,OAAO,oBAAoB;AAC3B,OAAO,eAAe;AAEtB,IAAM,UAAU,CAAC,QAAa,IAAI,KAAK,eAAe,QAAQ,UAAU,EAAE;AAE1E,IAAM,0BAA0C;AAAA,EAC/C,MAAM;AAAA,IACL,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,QAAQ,GAAG;AAAA,EAC9B;AACD;AAEO,IAAM,YAAY,mBAAmB,OAAO;AAAA,EAClD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACP,OAAO,EAAC,MAAM,UAAU,UAAU,KAAI;AAAA,IACtC,SAAS,EAAC,MAAM,UAAU,UAAU,KAAI;AAAA,IACxC,YAAY;AAAA,MACX,MAAM;AAAA;AAAA,MACN,SAAS,CAAC,YAAY,gBAAgB,UAAU;AAAA;AAAA,MAChD,UAAU;AAAA,IACX;AAAA,IACA,UAAU,EAAC,MAAM,UAAU,UAAU,KAAI;AAAA,IACzC,QAAQ,EAAC,MAAM,QAAQ,UAAU,MAAM,IAAI,EAAE,MAAM,SAAS,EAAC;AAAA,IAC7D,eAAe,EAAC,MAAM,UAAU,UAAU,KAAI;AAAA,EAC/C;AAAA,EACA,gBAAgB;AACjB,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACzB,gBAAgB;AAAA,EAChB,eAAe,CAAC,SAAS;AAAA,EACzB,KAAK;AAAA,IACJ,eAAe;AAAA,MACd;AAAA,MACA,CAAC,WAAW,EAAE,SAAS,qBAAqB,UAAU,EAAE,CAAC;AAAA,IAC1D;AAAA,IACA,eAAe;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,QACC;AAAA,QACA;AAAA,UACC,UAAU;AAAA;AAAA,QACX;AAAA,MACD;AAAA,IACD;AAAA,EACD;AACD,CAAC;",
  "names": []
}
